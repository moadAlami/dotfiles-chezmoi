%!PS-Adobe-2.0
%%DocumentFonts: Helvetica Helvetica-BoldOblique
%%Creator: Rem2PS
%%Pages: (atend)
%%Orientation: Portrait
%%EndComments
<< /PageSize [612 792] >> setpagedevice
% This file was produced by Remind and Rem2PS, written by
% Dianne Skoll.
% Remind and Rem2PS are Copyright 1992-2023 Dianne Skoll.
/ISOLatin1Encoding where { pop save true }{ false } ifelse
  /ISOLatin1Encoding [ StandardEncoding 0 45 getinterval aload pop /minus
    StandardEncoding 46 98 getinterval aload pop /dotlessi /grave /acute
    /circumflex /tilde /macron /breve /dotaccent /dieresis /.notdef /ring
    /cedilla /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring /ae
    /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave /iacute
    /icircumflex /idieresis /eth /ntilde /ograve /oacute /ocircumflex
    /otilde /odieresis /divide /oslash /ugrave /uacute /ucircumflex
    /udieresis /yacute /thorn /ydieresis ] def
{ restore } if

/reencodeISO { %def
    findfont dup length dict begin
    { 1 index /FID ne { def }{ pop pop } ifelse } forall
    /Encoding ISOLatin1Encoding def
    currentdict end definefont pop
} bind def
/copyFont { %def
    findfont dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    currentdict end definefont pop
} bind def

% L - Draw a line
/L {
   newpath moveto lineto stroke
} bind def
% string1 string2 strcat string
% Function: Concatenates two strings together.
/strcat {
         2 copy length exch length add
         string dup
         4 2 roll
         2 index 0 3 index
         putinterval
         exch length exch putinterval
} bind def
% string doheading
/doheading
{
   /monthyr exch def

   /TitleFont findfont
   TitleSize scalefont setfont
   monthyr stringwidth
   /hgt exch def
   2 div MaxX MinX add 2 div exch sub /x exch def
   MaxY Border sub TitleSize sub /y exch def
   newpath x y moveto monthyr show
   newpath x y moveto monthyr false charpath flattenpath pathbbox
   pop pop Border sub /y exch def pop
   MinX y MaxX y L
   /topy y def
   /HeadFont findfont HeadSize scalefont setfont
% Do the days of the week
   MaxX MinX sub 7 div /xincr exch def
   /x MinX def
[(Sunday) (Monday) (Tuesday) (Wednesday) (Thursday) (Friday) (Saturday)]
  {
     HeadSize x y HeadSize 2 mul sub x xincr add y CenterText
     x xincr add /x exch def
  } forall
  y HeadSize 2 mul sub /y exch def
  MinX y MaxX y L
  /ytop y def /ymin y def
}
def
/CenterText
{
   /maxy exch def
   /maxx exch def
   /miny exch def
   /minx exch def
   /sz exch def
   /str exch def
   str stringwidth pop
   2 div maxx minx add 2 div exch sub
   sz 2 div maxy miny add 2 div exch sub
   moveto str show
} def
% Variables:
% curline - a string holding the current line
% y - current y pos
% yincr - increment to next line
% xleft - left margin
% width - max width.
% EnterOneWord - given a word, enter it into the box.
% string EnterOneWord
/EnterOneWord {
   { EnterOneWordAux
     {exit} if }
   loop
} bind def
% EnterOneWordAux - if the word fits, enter it into box and return true.
% If it doesn't fit, put as much as will fit and return the string and false.
/EnterOneWordAux {
   /word exch def
   /tmpline curline word strcat def
   tmpline stringwidth pop width gt
   {MoveToNewLine}
   {/curline tmpline ( ) strcat def /word () def}
   ifelse
   word () eq
   {true}
   {word false}
   ifelse
} bind def
% MoveToNewLine - move to a new line, resetting word as appropriate
/MoveToNewLine {
   curline () ne
   {newpath xleft y moveto curline show /curline () def /y y yincr add def}   
   {ChopWord}
   ifelse
} bind def
% ChopWord - word won't fit.  Chop it and find biggest piece that will fit
/ChopWord {
   /curline () def
   /len word length def
   /Fcount len 1 sub def

   {
     word 0 Fcount getinterval stringwidth pop width le
     {exit} if
     /Fcount Fcount 1 sub def
   } loop
% Got the count.  Display it and reset word
   newpath xleft y moveto word 0 Fcount getinterval show
   /y y yincr add def
   /word word Fcount len Fcount sub getinterval def
} bind def
/FinishFormatting {
   word () ne
   {newpath xleft y moveto word show /word () def
    /curline () def /y y yincr add def}
   {curline () ne
     {newpath xleft y moveto curline show /word () def
      /curline () def /y y yincr add def} if}
   ifelse
} bind def
% FillBoxWithText - fill a box with text
% text-array xleft width yincr y FillBoxWithText new-y
% Returns the new Y-coordinate.
/FillBoxWithText {
   /y exch def
   /yincr exch def
   /width exch def
   /xleft exch def
   /curline () def
   % The last two strings in the word array are actually the PostScript
   % code to execute before and after the entry is printed.
   dup dup
   length 1 sub
   get
   exch
   dup dup
   length 2 sub
   get
   dup length 0 gt
   {cvx exec} {pop} ifelse
   dup length 2 sub 0 exch getinterval
   {EnterOneWord} forall
   FinishFormatting
   dup length 0 gt
   {cvx exec} {pop} ifelse
   y
} bind def
% Variables for calendar boxes:
% ytop - current top position
% ymin - minimum y reached for current row
% border ytop xleft width textarray daynum onright DoCalBox ybot
% Do the entries for one calendar box.  Returns lowest Y-coordinate reached
/DoCalBox {
   /onright exch def
   /daynum exch def
   /textarr exch def
   /wid exch def
   /xl exch def
   /yt exch def
   /border exch def
% Do the day number
   /DayFont findfont DaySize scalefont setfont
   onright 1 eq
   {xl wid add border sub daynum stringwidth pop sub yt border sub DaySize sub moveto daynum show}
   {xl border add yt border sub DaySize sub moveto daynum show}
   ifelse
% Do the text entries.  Precharge the stack with current y pos.
   /ycur yt border sub DaySize sub DaySize sub 2 add def
   /EntryFont findfont EntrySize scalefont setfont
   ycur
   textarr
   { exch 2 sub /ycur exch def xl border add wid border sub border sub EntrySize 2 add neg
     ycur FillBoxWithText }
    forall
} bind def
2 setlinecap
% Define a default PreCal procedure
/PreCal { pop pop } bind def
/HeadFont /Helvetica copyFont
/SmallFont /Helvetica copyFont
/DayFont /Helvetica-BoldOblique copyFont
/EntryFont /Helvetica copyFont
/TitleFont /Helvetica copyFont
/HeadSize 14 def
/DaySize 14 def
/EntrySize 8 def
/TitleSize 14 def
/XSIZE 612 def
/MinX 36 def
/MinY 36 def
/MaxX 576 def
/MaxY 756 def
/Border 6 def
/LineWidth 1 def
1 setlinewidth
/SmallFont findfont /FontInfo get /isFixedPitch get
{/SmallString (WW ) def}
{/SmallString (WW) def}
ifelse
%%EndProlog
%%Page: Oct23 1
%%PageBoundingBox: 0 0 612 792
/SAVESTATE save def (October) (2023) PreCal SAVESTATE restore
(October 2023) doheading
/MinBoxSize ytop MinY sub 7 div def
/ysmalltop ytop def
/CAL1 {
Border ytop 0 xincr mul MinX add xincr
[
]
(1) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL2 {
Border ytop 1 xincr mul MinX add xincr
[
]
(2) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL3 {
Border ytop 2 xincr mul MinX add xincr
[
]
(3) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL4 {
Border ytop 3 xincr mul MinX add xincr
[
]
(4) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL5 {
Border ytop 4 xincr mul MinX add xincr
[
]
(5) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL6 {
Border ytop 5 xincr mul MinX add xincr
[
]
(6) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL7 {
Border ytop 6 xincr mul MinX add xincr
[
]
(7) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
CAL1
CAL2
CAL3
CAL4
CAL5
CAL6
CAL7
/y ytop MinBoxSize sub def y ymin lt {/ymin y def} if
MinX ymin MaxX ymin L
/ylast ytop def
/ytop ymin def
/CAL8 {
Border ytop 0 xincr mul MinX add xincr
[
]
(8) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL9 {
Border ytop 1 xincr mul MinX add xincr
[
]
(9) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL10 {
Border ytop 2 xincr mul MinX add xincr
[
]
(10) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL11 {
Border ytop 3 xincr mul MinX add xincr
[
]
(11) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL12 {
Border ytop 4 xincr mul MinX add xincr
[
]
(12) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL13 {
Border ytop 5 xincr mul MinX add xincr
[
]
(13) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL14 {
Border ytop 6 xincr mul MinX add xincr
[
]
(14) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
CAL8
CAL9
CAL10
CAL11
CAL12
CAL13
CAL14
/y ytop MinBoxSize sub def y ymin lt {/ymin y def} if
MinX ymin MaxX ymin L
/ylast ytop def
/ytop ymin def
/CAL15 {
Border ytop 0 xincr mul MinX add xincr
[
]
(15) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL16 {
Border ytop 1 xincr mul MinX add xincr
[
]
(16) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL17 {
Border ytop 2 xincr mul MinX add xincr
[
]
(17) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL18 {
Border ytop 3 xincr mul MinX add xincr
[
  [(11:00am)(Data)(discussion)(w/)(Rachid)
()()]
  [(3:30pm)(Weekly)(IAGeoSAgri)
()()]
]
(18) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL19 {
Border ytop 4 xincr mul MinX add xincr
[
]
(19) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL20 {
Border ytop 5 xincr mul MinX add xincr
[
]
(20) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL21 {
Border ytop 6 xincr mul MinX add xincr
[
]
(21) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
CAL15
CAL16
CAL17
CAL18
CAL19
CAL20
CAL21
/y ytop MinBoxSize sub def y ymin lt {/ymin y def} if
MinX ymin MaxX ymin L
/ylast ytop def
/ytop ymin def
/CAL22 {
Border ytop 0 xincr mul MinX add xincr
[
]
(22) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL23 {
Border ytop 1 xincr mul MinX add xincr
[
  [(Presentation)(IAGeoSAgri)
()()]
]
(23) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL24 {
Border ytop 2 xincr mul MinX add xincr
[
  [(Standards)(of)(data)(collection)
()()]
]
(24) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL25 {
Border ytop 3 xincr mul MinX add xincr
[
  [(3:30pm)(Weekly)(IAGeoSAgri)
()()]
]
(25) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL26 {
Border ytop 4 xincr mul MinX add xincr
[
]
(26) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL27 {
Border ytop 5 xincr mul MinX add xincr
[
]
(27) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL28 {
Border ytop 6 xincr mul MinX add xincr
[
]
(28) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
CAL22
CAL23
CAL24
CAL25
CAL26
CAL27
CAL28
/y ytop MinBoxSize sub def y ymin lt {/ymin y def} if
MinX ymin MaxX ymin L
/ylast ytop def
/ytop ymin def
/CAL29 {
Border ytop 0 xincr mul MinX add xincr
[
]
(29) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL30 {
Border ytop 1 xincr mul MinX add xincr
[
]
(30) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
/CAL31 {
Border ytop 2 xincr mul MinX add xincr
[
]
(31) 1
DoCalBox
/y exch def y ymin lt {/ymin y def} if
} def
CAL29
CAL30
CAL31
/y ytop MinBoxSize sub def y ymin lt {/ymin y def} if
MinX ymin MaxX ymin L
/ylast ytop def
/ytop ymin def
/ysmallbot ylast def
/ysmall1 ysmallbot def /ysmall2 ysmallbot def
0 xincr mul MinX add ymin 0 xincr mul MinX add topy L
1 xincr mul MinX add ymin 1 xincr mul MinX add topy L
2 xincr mul MinX add ymin 2 xincr mul MinX add topy L
3 xincr mul MinX add ymin 3 xincr mul MinX add topy L
4 xincr mul MinX add ymin 4 xincr mul MinX add topy L
5 xincr mul MinX add ymin 5 xincr mul MinX add topy L
6 xincr mul MinX add ymin 6 xincr mul MinX add topy L
7 xincr mul MinX add ymin 7 xincr mul MinX add topy L
/SmallFontSize MinBoxSize Border sub Border sub 8 div 2 sub def
/SmallFont findfont setfont
SmallString stringwidth pop /SmallWidth exch def
SmallWidth 7 mul xincr Border sub Border sub exch div /tmp exch def
tmp SmallFontSize lt {/SmallFontSize tmp def} if
/SmallFont findfont SmallFontSize scalefont setfont
SmallString stringwidth pop /SmallWidth exch def
gsave
5 xincr mul MinX add ysmall1 translate
SmallWidth 7 mul (September) stringwidth pop sub 2 div Border add Border neg SmallFontSize sub moveto (September) show
Border 0 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize sub 2 sub moveto (S) show
Border 1 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize sub 2 sub moveto (M) show
Border 2 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize sub 2 sub moveto (T) show
Border 3 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize sub 2 sub moveto (W) show
Border 4 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize sub 2 sub moveto (T) show
Border 5 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize sub 2 sub moveto (F) show
Border 6 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize sub 2 sub moveto (S) show
Border 5 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 2 mul sub moveto (1) show
Border 6 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 2 mul sub moveto (2) show
Border 0 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 3 mul sub moveto (3) show
Border 1 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 3 mul sub moveto (4) show
Border 2 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 3 mul sub moveto (5) show
Border 3 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 3 mul sub moveto (6) show
Border 4 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 3 mul sub moveto (7) show
Border 5 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 3 mul sub moveto (8) show
Border 6 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 3 mul sub moveto (9) show
Border 0 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 4 mul sub moveto (10) show
Border 1 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 4 mul sub moveto (11) show
Border 2 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 4 mul sub moveto (12) show
Border 3 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 4 mul sub moveto (13) show
Border 4 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 4 mul sub moveto (14) show
Border 5 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 4 mul sub moveto (15) show
Border 6 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 4 mul sub moveto (16) show
Border 0 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 5 mul sub moveto (17) show
Border 1 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 5 mul sub moveto (18) show
Border 2 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 5 mul sub moveto (19) show
Border 3 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 5 mul sub moveto (20) show
Border 4 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 5 mul sub moveto (21) show
Border 5 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 5 mul sub moveto (22) show
Border 6 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 5 mul sub moveto (23) show
Border 0 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 6 mul sub moveto (24) show
Border 1 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 6 mul sub moveto (25) show
Border 2 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 6 mul sub moveto (26) show
Border 3 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 6 mul sub moveto (27) show
Border 4 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 6 mul sub moveto (28) show
Border 5 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 6 mul sub moveto (29) show
Border 6 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 6 mul sub moveto (30) show
grestore
/SmallFontSize MinBoxSize Border sub Border sub 8 div 2 sub def
/SmallFont findfont setfont
SmallString stringwidth pop /SmallWidth exch def
SmallWidth 7 mul xincr Border sub Border sub exch div /tmp exch def
tmp SmallFontSize lt {/SmallFontSize tmp def} if
/SmallFont findfont SmallFontSize scalefont setfont
SmallString stringwidth pop /SmallWidth exch def
gsave
6 xincr mul MinX add ysmall2 translate
SmallWidth 7 mul (November) stringwidth pop sub 2 div Border add Border neg SmallFontSize sub moveto (November) show
Border 0 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize sub 2 sub moveto (S) show
Border 1 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize sub 2 sub moveto (M) show
Border 2 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize sub 2 sub moveto (T) show
Border 3 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize sub 2 sub moveto (W) show
Border 4 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize sub 2 sub moveto (T) show
Border 5 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize sub 2 sub moveto (F) show
Border 6 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize sub 2 sub moveto (S) show
Border 3 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 2 mul sub moveto (1) show
Border 4 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 2 mul sub moveto (2) show
Border 5 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 2 mul sub moveto (3) show
Border 6 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 2 mul sub moveto (4) show
Border 0 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 3 mul sub moveto (5) show
Border 1 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 3 mul sub moveto (6) show
Border 2 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 3 mul sub moveto (7) show
Border 3 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 3 mul sub moveto (8) show
Border 4 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 3 mul sub moveto (9) show
Border 5 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 3 mul sub moveto (10) show
Border 6 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 3 mul sub moveto (11) show
Border 0 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 4 mul sub moveto (12) show
Border 1 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 4 mul sub moveto (13) show
Border 2 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 4 mul sub moveto (14) show
Border 3 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 4 mul sub moveto (15) show
Border 4 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 4 mul sub moveto (16) show
Border 5 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 4 mul sub moveto (17) show
Border 6 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 4 mul sub moveto (18) show
Border 0 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 5 mul sub moveto (19) show
Border 1 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 5 mul sub moveto (20) show
Border 2 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 5 mul sub moveto (21) show
Border 3 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 5 mul sub moveto (22) show
Border 4 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 5 mul sub moveto (23) show
Border 5 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 5 mul sub moveto (24) show
Border 6 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 5 mul sub moveto (25) show
Border 0 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 6 mul sub moveto (26) show
Border 1 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 6 mul sub moveto (27) show
Border 2 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 6 mul sub moveto (28) show
Border 3 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 6 mul sub moveto (29) show
Border 4 SmallWidth mul add Border neg SmallFontSize sub SmallFontSize 2 add 6 mul sub moveto (30) show
grestore
showpage
%%Trailer
%%Pages: 1
